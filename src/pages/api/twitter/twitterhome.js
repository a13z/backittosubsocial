import React, { useState } from 'react';
import Head from 'next/head'
import Image from 'next/image'

import { signIn, signOut, useSession, getSession } from 'next-auth/react';

// import styles from '../styles/Home.module.css'

export default function TwitterHome({ session }) {
  // const [session] = useSession();
  // const [search, setSearch] = useState('');
  const [statuses, setStatuses] = useState([]);

  async function handleOnSearchSubmit(e) {
    e.preventDefault();
  
    const formData = new FormData(e.currentTarget);
    const query = formData.get('query');
  
    const results = await fetch('/api/twitter/search', {
      method: 'POST',
      body: JSON.stringify({
        query
      })
    }).then(res => res.json());
  
    setStatuses(results.data);
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome { session ? session.user.name : 'to Next.js' }
        </h1>

        <p className={styles.description}>
          {!session && <>
            Not signed in <br/>
            <button onClick={() => signIn()}>Sign in</button>
          </>}
          {session && <>
            Signed in as {session.user.email} <br/>
            <button onClick={() => signOut()}>Sign out</button>
          </>}
        </p>

        <form onSubmit={handleOnSearchSubmit}>
          <h2>Search</h2>
          <input type="search" name="query" />
          <button>Search</button>
        </form>

        {statuses && (
          <ul>
            { statuses.map(({ id, text, user }) => {
              return (
                <li key={id}>
                  <p>{ text }</p>
                  <p>By { user.name } ({ user.screen_name })</p>
                </li>
              );
            })}
          </ul>
        )}


        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getServerSideProps(context) {
  const session = await getSession(context);
  return {
    props: {
      session
    }
  }
}